#include <behaviors.dtsi>
/* Include all behavior includes needed */
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/keys.h>
#include "glove80/bt.dtsi"
#include "glove80/magic.dtsi"

/* Automatically generated layer name #define */
#define LAYER_Base 0
#define LAYER_Symbols 1
#define LAYER_Windows 2
#define LAYER_Numrow 3
#define LAYER_Magic 4
/* #define LAYER_Factory 5 */

/* Custom Device-tree */
&mt {
    tapping-term-ms = <250>;
    flavor = "tap-preferred";
};

/* Custom Defined Behaviors */
/ {
#define LAYER_BASE 0
#define LAYER_SYMBOLS 1
#define LAYER_WINDOWS 2
#define LAYER_NUMROW 3

behaviors {
    tktl: tap_key_to_layer {
        compatible = "zmk,behavior-hold-tap";
        #binding-cells = <2>;
        tapping-term-ms = <200>;    // <---[[moderate duration]]
        quick-tap-ms = <0>;
        flavor = "balanced";
        bindings = <&kp>, <&to>;
    };
    tksl: tap_key_sticky_layer {
        compatible = "zmk,behavior-hold-tap";
        #binding-cells = <2>;
        tapping-term-ms = <200>;    // <---[[moderate duration]]
        quick-tap-ms = <0>;
        flavor = "balanced";
        bindings = <&kp>, <&sl>;
    };
    tkrk: tap_key_repeat_hold_key {
        compatible = "zmk,behavior-hold-tap";
        #binding-cells = <2>;
        tapping-term-ms = <200>;    // <---[[moderate duration]]
        quick-tap-ms = <0>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&key_repeat>;
    };
    rshift: tap_dance_rshift {
        compatible = "zmk,behavior-tap-dance";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings =
        <&tktl RSHIFT LAYER_NUMROW>,
        <&mo LAYER_NUMROW>;
    };
};

};

/* Automatically generated keymap */
/ {
    keymap {
        compatible = "zmk,keymap";

        layer_Base {
            bindings = <
               &kp F1    &kp F2   &kp F3    &kp F4     &kp F5                                                                                                          &kp F6     &kp F7    &kp F8    &kp F9    &kp F10
            &kp EQUAL    &kp N1   &kp N2    &kp N3     &kp N4  &kp N5                                                                                          &kp N6  &kp N7     &kp N8    &kp N9    &kp N0  &kp MINUS
              &kp TAB     &kp Q    &kp W     &kp E      &kp R   &kp T                                                                                           &kp Y   &kp U      &kp I     &kp O     &kp P   &kp BSLH
              &kp ESC     &kp A    &kp S     &kp D      &kp F   &kp G                                                                                           &kp H   &kp J      &kp K     &kp L  &kp SEMI    &kp SQT
            &kp GRAVE     &kp Z    &kp X     &kp C      &kp V   &kp B  &tksl LSHIFT LAYER_SYMBOLS  &mt LGUI ESC  &trans  &trans  &tkrk RGUI 0         &rshift   &kp N   &kp M  &kp COMMA   &kp DOT  &kp FSLH  &kp PG_UP
 &magic LAYER_Magic 0  &kp HOME  &kp END  &kp LEFT  &kp RIGHT                      &mt LCTRL BSPC     &lt 1 TAB   &sl 1   &sl 1     &lt 2 RET  &mt LALT SPACE          &kp UP   &kp DOWN  &kp LBKT  &kp RBKT  &kp PG_DN
            >;
        };

        
        layer_Symbols {
            bindings = <
         &kp C_BRI_DN  &kp C_BRI_UP  &kp C_PREV  &kp C_NEXT   &kp C_PP                                                                        &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP     &trans  &trans
               &trans        &trans      &trans      &trans     &trans     &trans                                                     &trans      &trans        &trans        &trans     &trans  &trans
               &trans     &kp CARET    &kp BSLH   &kp TILDE   &kp FSLH   &kp DLLR                                                    &kp SQT    &kp LBKT      &kp RBKT      &kp AMPS  &kp COLON  &trans
               &trans      &kp STAR    &kp PLUS   &kp UNDER  &kp MINUS  &kp EQUAL                                                    &kp DQT    &kp LPAR      &kp RPAR     &kp QMARK   &kp SEMI  &trans
               &trans      &kp EXCL      &kp AT    &kp HASH     &kp LT     &kp GT  &trans  &trans  &trans  &trans  &trans  &trans  &kp GRAVE    &kp LBRC      &kp RBRC      &kp PIPE  &kp PRCNT  &trans
 &magic LAYER_Magic 0        &trans      &trans      &trans     &trans             &trans  &trans  &trans  &trans  &trans  &trans                 &trans        &trans        &trans     &trans  &trans
            >;
        };

        layer_Windows {
            bindings = <
               &trans      &trans      &trans      &trans      &trans                                                                                   &trans      &trans         &trans  &trans  &trans
               &trans      &trans      &trans      &trans      &trans      &trans                                                         &trans        &trans      &trans         &trans  &trans  &trans
               &trans  &kp LG(N1)  &kp LG(N2)  &kp LG(N3)  &kp LG(N4)  &kp LG(N5)                                                   &kp LG(LEFT)  &kp LG(DOWN)  &kp LG(UP)  &kp LG(RIGHT)  &trans  &trans
               &trans  &kp LA(N1)  &kp LA(N2)  &kp LA(N3)  &kp LA(N4)  &kp LA(N5)                                                      &kp LA(H)     &kp LA(J)   &kp LA(K)      &kp LA(L)  &trans  &trans
               &trans      &trans      &trans      &trans      &trans      &trans   &trans  &trans  &trans  &trans  &trans  &trans        &trans        &trans      &trans         &trans  &trans  &trans
 &magic LAYER_Magic 0      &trans      &trans      &trans      &trans              &kp DEL  &trans  &trans  &trans  &trans  &trans                      &trans      &trans         &trans  &trans  &trans
            >;
        };

        layer_Numrow {
            bindings = <
               &trans      &trans      &trans      &trans      &trans                                                                     &trans        &trans      &trans        &trans   &trans
               &trans      &trans      &trans      &trans      &trans     &trans                                                          &trans        &trans      &trans        &trans   &trans  &trans
               &trans      &trans      &trans      &trans      &trans     &trans                                                          &trans        &trans      &trans        &trans   &trans  &trans
               &trans      &kp N1      &kp N2      &kp N3      &kp N4     &kp N5                                                          &kp N6        &kp N7      &kp N8        &kp N9   &kp N0  &trans
               &trans      &trans      &trans      &trans      &trans     &trans   &trans  &trans  &trans  &trans  &trans   &to 0         &trans        &trans      &trans        &trans   &trans  &trans
               &trans      &trans      &trans      &trans      &trans              &trans  &trans  &trans  &trans  &trans  &trans         &trans        &trans      &trans        &trans   &trans
            >;
        };

        layer_Magic {
            bindings = <
          &bt BT_CLR            &none            &none            &none            &none                                                                                  &none   &none   &none   &none  &bt BT_CLR_ALL
               &none            &none            &none            &none            &none            &none                                                         &none   &none   &none   &none   &none           &none
               &none  &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                                         &none   &none   &none   &none   &none           &none
         &bootloader  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                                         &none   &none   &none   &none   &none     &bootloader
          &sys_reset            &none            &none            &none            &none            &none   &bt_2   &bt_3         &none   &none   &none   &none   &none   &none   &none   &none   &none      &sys_reset
               &none            &none            &none            &none            &none                    &bt_0   &bt_1  &out OUT_USB   &none   &none   &none           &none   &none   &none   &none           &to 5
            >;
        };

        layer_Factory {
            bindings = <
 &kp NUMBER_0  &kp NUMBER_6  &kp NUMBER_2  &kp NUMBER_8  &kp NUMBER_4                                                                                                                  &kp NUMBER_4  &kp NUMBER_8  &kp NUMBER_2  &kp NUMBER_6  &kp NUMBER_0
 &kp NUMBER_1  &kp NUMBER_7  &kp NUMBER_3  &kp NUMBER_9  &kp NUMBER_5  &kp NUMBER_0                                                                                      &kp NUMBER_0  &kp NUMBER_5  &kp NUMBER_9  &kp NUMBER_3  &kp NUMBER_7  &kp NUMBER_1
 &kp NUMBER_2  &kp NUMBER_8  &kp NUMBER_4  &kp NUMBER_0  &kp NUMBER_6  &kp NUMBER_1                                                                                      &kp NUMBER_1  &kp NUMBER_6  &kp NUMBER_0  &kp NUMBER_4  &kp NUMBER_8  &kp NUMBER_2
 &kp NUMBER_3  &kp NUMBER_9  &kp NUMBER_5  &kp NUMBER_1  &kp NUMBER_7  &kp NUMBER_2                                                                                      &kp NUMBER_2  &kp NUMBER_7  &kp NUMBER_1  &kp NUMBER_5  &kp NUMBER_9  &kp NUMBER_3
 &kp NUMBER_4  &kp NUMBER_0  &kp NUMBER_6  &kp NUMBER_2  &kp NUMBER_8  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_6  &kp NUMBER_5  &kp NUMBER_4  &kp NUMBER_3  &kp NUMBER_8  &kp NUMBER_2  &kp NUMBER_6  &kp NUMBER_0  &kp NUMBER_4
 &kp NUMBER_5  &kp NUMBER_1  &kp NUMBER_7  &kp NUMBER_3  &kp NUMBER_9                &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_9  &kp NUMBER_8  &kp NUMBER_7                &kp NUMBER_9  &kp NUMBER_3  &kp NUMBER_7  &kp NUMBER_1  &kp NUMBER_5
            >;
        };

    };
};
