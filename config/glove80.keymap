#include <behaviors.dtsi>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/keys.h>
#include "glove80/bt.dtsi"
#include "glove80/magic.dtsi"
#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/glove80.h"

#define DEF 0
#define SYM 1
#define NAV 2
#define NUM 3
#define FUN 4
#define MGC 5
#define _MAGIC &magic MGC 0

#define QUICK_TAP_MS 175

&sk {  // sticky-key config
    release-after-ms = <900>;  // release after 0.6s
    quick-release;             // no double capitalization when rolling keys
};

&sl {  // sticky-layer config
    ignore-modifiers;          // allow chording sticky mods & layers
};

&lt {  // layer-tap config
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
};

&mt { // mod-tap config
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
};

// tap: num-word | double-tap: sticky num-layer | hold: num-layer
#define _SMART_NUM &smart_num NUM 0
ZMK_HOLD_TAP(smart_num,
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
    bindings = <&mo>, <&num_dance>;
)
ZMK_TAP_DANCE(num_dance,
    tapping-term-ms = <200>;
    bindings = <&num_word>, <&sl NUM>;  // reverse this for sticky-num on single tap
)
&num_word {  // num-word, requires PR #1451
    layers = <NUM>;
    continue-list = <BSPC DEL DOT COMMA PLUS MINUS STAR FSLH EQUAL>;
};
   
// tap: sticky-shift | shift + tap/ double-tap: caps-word | hold: shift
ZMK_MOD_MORPH(smart_shft,
    bindings = <&sk LSHFT>, <&caps_word>;
    mods = <(MOD_LSFT)>;
)
&caps_word {  // mods deactivate caps-word, requires PR #1451
    /delete-property/ ignore-modifiers;
};

// Original top rows
// &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10
// &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N10
// Original left-most row
// &kp EQUAL
// &kp TAB  
// &kp ESC  
// &kp GRAVE
// _MAGIC
// Original right-most row
// &kp MINUS
// &kp BSLH 
// &kp SQT  
// &kp PG_UP
// &kp PG_DN
/ {
    keymap {
        compatible = "zmk,keymap";

        layer_Base {
            bindings =  <
//    ┌────────────┬─────┬────────┬──────┬──────┐                                                                              ┌─────┬──────┬─────┬─────┬──────┐
//    │            │     │        │      │      │                                                                              │     │      │     │     │      │
//    ├────────────┼─────┼────────┼──────┼──────┼─────┐                                                                  ┌─────┼─────┼──────┼─────┼─────┼──────┤
//    │            │     │        │      │      │     │                                                                  │     │     │      │     │     │      │
//    ├────────────┼─────┼────────┼──────┼──────┼─────┤                                                                  ├─────┼─────┼──────┼─────┼─────┼──────┤
//    │   mo FUN   │  Q  │   W    │  E   │  R   │  T  │                                                                  │  Y  │  U  │  I   │  O  │  P  │      │
//    ├────────────┼─────┼────────┼──────┼──────┼─────┤                                                                  ├─────┼─────┼──────┼─────┼─────┼──────┤
//    │    esc     │  A  │   S    │  D   │  F   │  G  │                                                                  │  H  │  J  │  K   │  L  │  ;  │ keyr │
//    ├────────────┼─────┼────────┼──────┼──────┼─────┼──────────────┬────────────┬─────┬─────┬────────────┬─────────────┼─────┼─────┼──────┼─────┼─────┼──────┤
//    │ _SMART_NUM │  Z  │   X    │  C   │  V   │  B  │ &smart_shft  │            │     │     │            │    lgui     │  N  │  M  │  ,   │  .  │  /  │      │
//    ├────────────┼─────┼────────┼──────┼──────┼─────┼──────────────┼────────────┼─────┼─────┼────────────┼─────────────┼─────┼─────┼──────┼─────┼─────┼──────┤
//    │            │     │ _MAGIC │ left │ rght │     │ mt lctl bspc │ lt SYM tab │     │     │ lt NAV ent │ mt lalt spc │     │ up  │ down │     │     │      │
//    └────────────┴─────┴────────┴──────┴──────┘     └──────────────┴────────────┴─────┴─────┴────────────┴─────────────┘     └─────┴──────┴─────┴─────┴──────┘
  &trans       &trans   &trans   &trans     &trans                                                                                                        &trans   &trans      &trans    &trans     &trans     
  &trans       &trans   &trans   &trans     &trans      &trans                                                                                   &trans   &trans   &trans      &trans    &trans     &trans     
  &mo FUN      &kp Q    &kp W    &kp E      &kp R       &kp T                                                                                    &kp Y    &kp U    &kp I       &kp O     &kp P      &trans     
  &kp ESC      &kp A    &kp S    &kp D      &kp F       &kp G                                                                                    &kp H    &kp J    &kp K       &kp L     &kp SEMI   &key_repeat
  _SMART_NUM   &kp Z    &kp X    &kp C      &kp V       &kp B    &smart_shft      &trans        &trans   &trans   &trans        &kp LGUI         &kp N    &kp M    &kp COMMA   &kp DOT   &kp FSLH   &trans     
  &trans       &trans   _MAGIC   &kp LEFT   &kp RIGHT            &mt LCTRL BSPC   &lt SYM TAB   &trans   &trans   &lt NAV RET   &mt LALT SPACE            &kp UP   &kp DOWN    &trans    &trans     &trans     
            >;
        };

        layer_Sym {
            bindings = <
//    ┌─────┬─────┬─────┬─────┬─────┐                                               ┌─────┬─────┬─────┬─────┬─────┐
//    │     │     │     │     │     │                                               │     │     │     │     │     │
//    ├─────┼─────┼─────┼─────┼─────┼─────┐                                   ┌─────┼─────┼─────┼─────┼─────┼─────┤
//    │     │     │     │     │     │     │                                   │     │     │     │     │     │     │
//    ├─────┼─────┼─────┼─────┼─────┼─────┤                                   ├─────┼─────┼─────┼─────┼─────┼─────┤
//    │     │  ^  │  \  │  ~  │  /  │  $  │                                   │  '  │  [  │  ]  │  &  │  :  │     │
//    ├─────┼─────┼─────┼─────┼─────┼─────┤                                   ├─────┼─────┼─────┼─────┼─────┼─────┤
//    │     │  *  │  +  │  _  │  -  │  =  │                                   │  "  │  (  │  )  │  ?  │  ;  │     │
//    ├─────┼─────┼─────┼─────┼─────┼─────┼─────┬─────┬─────┬─────┬─────┬─────┼─────┼─────┼─────┼─────┼─────┼─────┤
//    │     │  !  │  @  │  #  │  <  │  >  │     │     │     │     │     │     │  `  │  {  │  }  │  |  │  %  │     │
//    ├─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤
//    │     │     │     │     │     │     │     │     │     │     │     │     │     │     │     │     │     │     │
//    └─────┴─────┴─────┴─────┴─────┘     └─────┴─────┴─────┴─────┴─────┴─────┘     └─────┴─────┴─────┴─────┴─────┘
  &trans   &trans      &trans     &trans      &trans                                                                                    &trans     &trans     &trans      &trans      &trans
  &trans   &trans      &trans     &trans      &trans      &trans                                                            &trans      &trans     &trans     &trans      &trans      &trans
  &trans   &kp CARET   &kp BSLH   &kp TILDE   &kp FSLH    &kp DLLR                                                          &kp SQT     &kp LBKT   &kp RBKT   &kp AMPS    &kp COLON   &trans
  &trans   &kp STAR    &kp PLUS   &kp UNDER   &kp MINUS   &kp EQUAL                                                         &kp DQT     &kp LPAR   &kp RPAR   &kp QMARK   &kp SEMI    &trans
  &trans   &kp EXCL    &kp AT     &kp HASH    &kp LT      &kp GT      &trans   &trans   &trans   &trans   &trans   &trans   &kp GRAVE   &kp LBRC   &kp RBRC   &kp PIPE    &kp PRCNT   &trans
  &trans   &trans      &trans     &trans      &trans                  &trans   &trans   &trans   &trans   &trans   &trans               &trans     &trans     &trans      &trans      &trans
            >;
        };

        layer_Nav {
            bindings = <
//    ┌─────┬─────────┬─────────┬─────────┬─────────┐                                                                      ┌────────────┬──────────┬────────────┬─────┬─────┐
//    │     │         │         │         │         │                                                                      │            │          │            │     │     │
//    ├─────┼─────────┼─────────┼─────────┼─────────┼───────────────┐                                         ┌────────────┼────────────┼──────────┼────────────┼─────┼─────┤
//    │     │         │         │         │         │               │                                         │            │            │          │            │     │     │
//    ├─────┼─────────┼─────────┼─────────┼─────────┼───────────────┤                                         ├────────────┼────────────┼──────────┼────────────┼─────┼─────┤
//    │     │ lgui(1) │ lgui(2) │ lgui(3) │ lgui(4) │    lgui(5)    │                                         │ lgui(left) │ lgui(down) │ lgui(up) │ lgui(rght) │     │     │
//    ├─────┼─────────┼─────────┼─────────┼─────────┼───────────────┤                                         ├────────────┼────────────┼──────────┼────────────┼─────┼─────┤
//    │     │ lalt(1) │ lalt(2) │ lalt(3) │ lalt(4) │    lalt(5)    │                                         │  lalt(H)   │  lalt(J)   │ lalt(K)  │  lalt(L)   │     │     │
//    ├─────┼─────────┼─────────┼─────────┼─────────┼───────────────┼─────┬───────────┬─────┬─────┬─────┬─────┼────────────┼────────────┼──────────┼────────────┼─────┼─────┤
//    │     │         │         │         │         │ lgui(lsft(4)) │     │           │     │     │     │     │            │            │          │            │     │     │
//    ├─────┼─────────┼─────────┼─────────┼─────────┼───────────────┼─────┼───────────┼─────┼─────┼─────┼─────┼────────────┼────────────┼──────────┼────────────┼─────┼─────┤
//    │     │         │         │         │         │               │ del │ lgui(spc) │     │     │     │     │            │            │          │            │     │     │
//    └─────┴─────────┴─────────┴─────────┴─────────┘               └─────┴───────────┴─────┴─────┴─────┴─────┘            └────────────┴──────────┴────────────┴─────┴─────┘
  &trans   &trans       &trans       &trans       &trans                                                                                                     &trans         &trans       &trans          &trans   &trans
  &trans   &trans       &trans       &trans       &trans       &trans                                                                         &trans         &trans         &trans       &trans          &trans   &trans
  &trans   &kp LG(N1)   &kp LG(N2)   &kp LG(N3)   &kp LG(N4)   &kp LG(N5)                                                                     &kp LG(LEFT)   &kp LG(DOWN)   &kp LG(UP)   &kp LG(RIGHT)   &trans   &trans
  &trans   &kp LA(N1)   &kp LA(N2)   &kp LA(N3)   &kp LA(N4)   &kp LA(N5)                                                                     &kp LA(H)      &kp LA(J)      &kp LA(K)    &kp LA(L)       &trans   &trans
  &trans   &trans       &trans       &trans       &trans       &kp LG(LS(N4))   &trans    &trans          &trans   &trans   &trans   &trans   &trans         &trans         &trans       &trans          &trans   &trans
  &trans   &trans       &trans       &trans       &trans                        &kp DEL   &kp LG(SPACE)   &trans   &trans   &trans   &trans                  &trans         &trans       &trans          &trans   &trans
            >;
        };

        layer_Num{
            bindings = <
//    ┌─────┬─────┬─────┬─────┬─────┐                                                  ┌─────┬─────┬─────┬─────┬─────┐
//    │     │     │     │     │     │                                                  │     │     │     │     │     │
//    ├─────┼─────┼─────┼─────┼─────┼─────┐                                      ┌─────┼─────┼─────┼─────┼─────┼─────┤
//    │     │     │     │     │     │     │                                      │     │     │     │     │     │     │
//    ├─────┼─────┼─────┼─────┼─────┼─────┤                                      ├─────┼─────┼─────┼─────┼─────┼─────┤
//    │     │     │     │     │     │     │                                      │     │  7  │  8  │  9  │     │     │
//    ├─────┼─────┼─────┼─────┼─────┼─────┤                                      ├─────┼─────┼─────┼─────┼─────┼─────┤
//    │     │     │     │     │     │     │                                      │     │  4  │  5  │  6  │     │     │
//    ├─────┼─────┼─────┼─────┼─────┼─────┼─────┬────────┬─────┬─────┬─────┬─────┼─────┼─────┼─────┼─────┼─────┼─────┤
//    │     │     │     │     │     │     │     │ to DEF │     │     │     │     │  0  │  1  │  2  │  3  │     │     │
//    ├─────┼─────┼─────┼─────┼─────┼─────┼─────┼────────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤
//    │     │     │     │     │     │     │     │        │     │     │     │     │     │  ,  │  .  │     │     │     │
//    └─────┴─────┴─────┴─────┴─────┘     └─────┴────────┴─────┴─────┴─────┴─────┘     └─────┴─────┴─────┴─────┴─────┘
  &trans   &trans   &trans   &trans   &trans                                                                            &trans      &trans    &trans   &trans   &trans
  &trans   &trans   &trans   &trans   &trans   &trans                                                          &trans   &trans      &trans    &trans   &trans   &trans
  &trans   &trans   &trans   &trans   &trans   &trans                                                          &trans   &kp N7      &kp N8    &kp N9   &trans   &trans
  &trans   &trans   &trans   &trans   &trans   &trans                                                          &trans   &kp N4      &kp N5    &kp N6   &trans   &trans
  &trans   &trans   &trans   &trans   &trans   &trans   &trans   &to DEF   &trans   &trans   &trans   &trans   &kp N0   &kp N1      &kp N2    &kp N3   &trans   &trans
  &trans   &trans   &trans   &trans   &trans            &trans   &trans    &trans   &trans   &trans   &trans            &kp COMMA   &kp DOT   &trans   &trans   &trans
            >;
        };

      layer_Fun{
            bindings = <
//    ┌─────┬─────┬─────┬─────┬─────┐                                                  ┌─────┬─────┬─────┬─────┬─────┐
//    │     │     │     │     │     │                                                  │     │     │     │     │     │
//    ├─────┼─────┼─────┼─────┼─────┼─────┐                                      ┌─────┼─────┼─────┼─────┼─────┼─────┤
//    │     │     │     │     │     │     │                                      │     │     │     │     │     │     │
//    ├─────┼─────┼─────┼─────┼─────┼─────┤                                      ├─────┼─────┼─────┼─────┼─────┼─────┤
//    │     │     │     │     │     │     │                                      │ f12 │ f7  │ f8  │ f9  │     │     │
//    ├─────┼─────┼─────┼─────┼─────┼─────┤                                      ├─────┼─────┼─────┼─────┼─────┼─────┤
//    │     │     │     │     │     │     │                                      │ f11 │ f4  │ f5  │ f6  │     │     │
//    ├─────┼─────┼─────┼─────┼─────┼─────┼─────┬────────┬─────┬─────┬─────┬─────┼─────┼─────┼─────┼─────┼─────┼─────┤
//    │     │     │     │     │     │     │     │ to DEF │     │     │     │     │ f10 │ f1  │ f2  │ f3  │     │     │
//    ├─────┼─────┼─────┼─────┼─────┼─────┼─────┼────────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤
//    │     │     │     │     │     │     │     │        │     │     │     │     │     │     │     │     │     │     │
//    └─────┴─────┴─────┴─────┴─────┘     └─────┴────────┴─────┴─────┴─────┴─────┘     └─────┴─────┴─────┴─────┴─────┘
  &trans   &trans   &trans   &trans   &trans                                                                             &trans   &trans   &trans   &trans   &trans
  &trans   &trans   &trans   &trans   &trans   &trans                                                          &trans    &trans   &trans   &trans   &trans   &trans
  &trans   &trans   &trans   &trans   &trans   &trans                                                          &kp F12   &kp F7   &kp F8   &kp F9   &trans   &trans
  &trans   &trans   &trans   &trans   &trans   &trans                                                          &kp F11   &kp F4   &kp F5   &kp F6   &trans   &trans
  &trans   &trans   &trans   &trans   &trans   &trans   &trans   &to DEF   &trans   &trans   &trans   &trans   &kp F10   &kp F1   &kp F2   &kp F3   &trans   &trans
  &trans   &trans   &trans   &trans   &trans            &trans   &trans    &trans   &trans   &trans   &trans             &trans   &trans   &trans   &trans   &trans
            >;
        };

        layer_Magic {
            bindings = <
//    ┌────────────┬─────────┬─────────┬─────────┬─────────┐                                                                    ┌──────┬──────┬──────┬─────┬────────────┐
//    │            │         │         │         │         │                                                                    │      │      │      │     │            │
//    ├────────────┼─────────┼─────────┼─────────┼─────────┼─────────┐                                                   ┌──────┼──────┼──────┼──────┼─────┼────────────┤
//    │            │         │         │         │         │         │                                                   │      │      │      │      │     │            │
//    ├────────────┼─────────┼─────────┼─────────┼─────────┼─────────┤                                                   ├──────┼──────┼──────┼──────┼─────┼────────────┤
//    │ &sys_reset │ ug_ sp+ │ ug_ sa+ │ ug_ hu+ │ ug_ br+ │ ug_ tog │                                                   │ bri- │ bri+ │      │      │     │ &sys_reset │
//    ├────────────┼─────────┼─────────┼─────────┼─────────┼─────────┤                                                   ├──────┼──────┼──────┼──────┼─────┼────────────┤
//    │    boot    │ ug_ sp- │ ug_ sa- │ ug_ hu- │ ug_ br- │ ug_ eff │                                                   │      │ mute │ vold │ volu │     │    boot    │
//    ├────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼───────┬───────┬─────┬─────┬──────────┬────────────┼──────┼──────┼──────┼──────┼─────┼────────────┤
//    │            │         │         │         │         │         │ &bt_2 │ &bt_3 │     │     │  bt_clr  │ bt_clr_ALL │      │ play │ prev │ next │     │            │
//    ├────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼───────┼───────┼─────┼─────┼──────────┼────────────┼──────┼──────┼──────┼──────┼─────┼────────────┤
//    │            │         │         │         │         │         │ &bt_0 │ &bt_1 │     │     │ out_ usb │            │      │      │      │      │     │            │
//    └────────────┴─────────┴─────────┴─────────┴─────────┘         └───────┴───────┴─────┴─────┴──────────┴────────────┘      └──────┴──────┴──────┴─────┴────────────┘
  &none         &none             &none             &none             &none                                                                                                              &none          &none          &none          &none   &none      
  &none         &none             &none             &none             &none             &none                                                                             &none          &none          &none          &none          &none   &none      
  &sys_reset    &rgb_ug RGB_SPI   &rgb_ug RGB_SAI   &rgb_ug RGB_HUI   &rgb_ug RGB_BRI   &rgb_ug RGB_TOG                                                                   &kp C_BRI_DN   &kp C_BRI_UP   &none          &none          &none   &sys_reset 
  &bootloader   &rgb_ug RGB_SPD   &rgb_ug RGB_SAD   &rgb_ug RGB_HUD   &rgb_ug RGB_BRD   &rgb_ug RGB_EFF                                                                   &none          &kp C_MUTE     &kp C_VOL_DN   &kp C_VOL_UP   &none   &bootloader
  &none         &none             &none             &none             &none             &none             &bt_2   &bt_3   &none   &none   &bt BT_CLR     &bt BT_CLR_ALL   &none          &kp C_PP       &kp C_PREV     &kp C_NEXT     &none   &none      
  &none         &none             &none             &none             &none                               &bt_0   &bt_1   &none   &none   &out OUT_USB   &none                           &none          &none          &none          &none   &none      
            >;
        };

    };
};
